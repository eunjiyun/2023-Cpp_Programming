#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "FileName.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" };


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

=====================================================
저장한 시간 : 2023-10-24 16:29:17.7804143
=====================================================



//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "FileName.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app };//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now = chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다.
	using namespace std::chrono_literals;//그리니치 천문대 기준으로부터 9h를 더할 수 있다.

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << now + 9h << endl;
	out << "=====================================================" << '\n';
	out << '\n';

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}