//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" };


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}
//eof end of file
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;

	in.close();//여기서 닫을 필요가 없다.
}
//eof end of file
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;

}

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;

}

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다.

	cout << "저장한 시간 : " << now << endl;

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;

	//return 0;// 이건 표준 스타일이 아니므로 cpp에서 쓰면 안 된다.
}

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다.

	cout << "저장한 시간 : " << now +9h<< endl;

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다.
	using namespace std::chrono_literals;//그리니치 천문대 기준으로부터 9h를 더할 수 있다.
	cout << "저장한 시간 : " << now +9h<< endl;

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}



=====================================================
저장한 시간 : 2023-09-07 16:19:48.2451013
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다.
	using namespace std::chrono_literals;//그리니치 천문대 기준으로부터 9h를 더할 수 있다.
	
	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << now +9h<< endl;
	out << "=====================================================" << '\n';
	out << '\n';

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:29:11
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc=chrono::system_clock::to_time_t(now);//UTC시간으로 변경
	auto lt=localtime(&utc);//지역 달력시간으로 변경
	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로
	
	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt,"%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:32:32
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc=chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt=localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt,"%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:34:30
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc=chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt=localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt,"%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}
//eof end of file


=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:58:28
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:58:28
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:58:28
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:59:42
=====================================================

//----------------------------------------------------------------------------------------------------------------------------------
//save.cpp 한 학기 강의를 저장한다
// 
// 2023. 9. 7
//----------------------------------------------------------------------------------------------------------------------------------

#include "save.h"

void save(const std::string&)
{
	ifstream in{ "save.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app };//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now = chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc = chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt = localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt, "%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';
	out.imbue(old);

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:59:42
=====================================================

//----------------------------------------------------------------------------------------------------------------------------------
//save.cpp 한 학기 강의를 저장한다
// 
// 2023. 9. 7
//----------------------------------------------------------------------------------------------------------------------------------

#include "save.h"

void save(const std::string&)
{
	ifstream in{ "save.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app };//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now = chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc = chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt = localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt, "%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';
	out.imbue(old);

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:59:42
=====================================================

//----------------------------------------------------------------------------------------------------------------------------------
//save.cpp 한 학기 강의를 저장한다
// 
// 2023. 9. 7
//----------------------------------------------------------------------------------------------------------------------------------

#include "save.h"

void save(const std::string&)
{
	ifstream in{ "save.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app };//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now = chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc = chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt = localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt, "%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';
	out.imbue(old);

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:07:16
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:07:16
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:07:16
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:10:38
=====================================================

//-----------------------------------------------------------------------------------------
// save.h - 한 학기 강의를 저장하는 코드
// 
// 2023. 9. 7
//-----------------------------------------------------------------------------------------

#pragma once
//#include<iostream>
//#include<string>
//#include<fstream>
//#include<chrono>
//using namespace std;
void save(const std::string&);//const char*는 cpp에서 사용하지x => string을 사용

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:10:38
=====================================================

//----------------------------------------------------------------------------------------------------------------------------------
//save.cpp 한 학기 강의를 저장한다
// 
// 2023. 9. 7
//----------------------------------------------------------------------------------------------------------------------------------

//#include "save.h"
#include<string>
#include<fstream>
#include<chrono>
using namespace std;

//------------------------------------
void save(const std::string& fileName)
//------------------------------------
{
	ifstream in{ fileName};//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app };//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now = chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc = chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt = localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt, "%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';
	out.imbue(old);

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:10:38
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:15:48
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// C++ 입출력
// ------------------------------------------------------------------------------
// 과제 - C++ 입출력 관련 내용 알아보기
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>//cin, cout, cerr, clog - 자동 생성
#include "save.h"

int main()
{
	std::cerr << "안녕?" << '\n';//error가 난 상황에 스트림이 이 쪽으로 흘러가게끔

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:17:18
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// C++ 입출력
// ------------------------------------------------------------------------------
// 과제 - C++ 입출력 관련 내용 알아보기
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>//cin, cout, cerr, clog - 자동 생성
#include "save.h"

int main()
{
	// <<추출자
	std::cout<< "안녕?" << '\n';//출력 전담 객체

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:19:27
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// C++ 입출력
// ------------------------------------------------------------------------------
// 과제 - C++ 입출력 관련 내용 알아보기
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>//cin, cout, cerr, clog - 자동 생성
#include "save.h"

int main()
{
	//구구단 2단
	std::cout << 2 << " x " << 1 << " = " << 2 * 1 << '\n';
	std::cout << 2 << " x " << 2 << " = " << 2 * 2 << '\n';
	std::cout << 2 << " x " << 3 << " = " << 2 * 3 << '\n';
	std::cout << 2 << " x " << 4 << " = " << 2 * 4 << '\n';
	std::cout << 2 << " x " << 5 << " = " << 2 * 5 << '\n';
	std::cout << 2 << " x " << 6 << " = " << 2 * 6 << '\n';
	std::cout << 2 << " x " << 7 << " = " << 2 * 7 << '\n';
	std::cout << 2 << " x " << 8 << " = " << 2 * 8 << '\n';
	std::cout << 2 << " x " << 9 << " = " << 2 * 9 << '\n';

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:20:24
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// C++ 입출력
// ------------------------------------------------------------------------------
// 과제 - C++ 입출력 관련 내용 알아보기
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>//cin, cout, cerr, clog - 자동 생성
#include "save.h"

int main()
{
	//구구단 2단
	for (int 변수 = 1; 변수 <= 9; ++변수) {
		std::cout << 2 << " x " << 변수 << " = " << 2 * 변수 << '\n';
	}
	
	save("소스.cpp");
}

