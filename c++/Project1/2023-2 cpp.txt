//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" };


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}
//eof end of file
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;

	in.close();//여기서 닫을 필요가 없다.
}
//eof end of file
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;

}

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.


	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;

}

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다.

	cout << "저장한 시간 : " << now << endl;

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;

	//return 0;// 이건 표준 스타일이 아니므로 cpp에서 쓰면 안 된다.
}

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다.

	cout << "저장한 시간 : " << now +9h<< endl;

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다.
	using namespace std::chrono_literals;//그리니치 천문대 기준으로부터 9h를 더할 수 있다.
	cout << "저장한 시간 : " << now +9h<< endl;

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}



=====================================================
저장한 시간 : 2023-09-07 16:19:48.2451013
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다.
	using namespace std::chrono_literals;//그리니치 천문대 기준으로부터 9h를 더할 수 있다.
	
	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << now +9h<< endl;
	out << "=====================================================" << '\n';
	out << '\n';

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:29:11
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc=chrono::system_clock::to_time_t(now);//UTC시간으로 변경
	auto lt=localtime(&utc);//지역 달력시간으로 변경
	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로
	
	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt,"%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:32:32
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가?
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc=chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt=localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt,"%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:34:30
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 한 학기 강의를 저장할 수 있는 코드 작성
// -소스.cpp 파일의 모든 글자를 읽을 수 있다.
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>//파일을 읽고 쓰려면 이걸 포함해야
#include<chrono>//cpp에서 시간을 다룰 때는 이 라이브러리를 사용
using namespace std;

int main()
{//main 괄호는 여기서 연다. 구글 코딩 스타일, 언리얼 코딩 스타일을 검색
	ifstream in{ "소스.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app};//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now=chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc=chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt=localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt,"%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}
//eof end of file


=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:58:28
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:58:28
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:58:28
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:59:42
=====================================================

//----------------------------------------------------------------------------------------------------------------------------------
//save.cpp 한 학기 강의를 저장한다
// 
// 2023. 9. 7
//----------------------------------------------------------------------------------------------------------------------------------

#include "save.h"

void save(const std::string&)
{
	ifstream in{ "save.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app };//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now = chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc = chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt = localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt, "%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';
	out.imbue(old);

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:59:42
=====================================================

//----------------------------------------------------------------------------------------------------------------------------------
//save.cpp 한 학기 강의를 저장한다
// 
// 2023. 9. 7
//----------------------------------------------------------------------------------------------------------------------------------

#include "save.h"

void save(const std::string&)
{
	ifstream in{ "save.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app };//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now = chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc = chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt = localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt, "%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';
	out.imbue(old);

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 4:59:42
=====================================================

//----------------------------------------------------------------------------------------------------------------------------------
//save.cpp 한 학기 강의를 저장한다
// 
// 2023. 9. 7
//----------------------------------------------------------------------------------------------------------------------------------

#include "save.h"

void save(const std::string&)
{
	ifstream in{ "save.cpp" };//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app };//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now = chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc = chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt = localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt, "%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';
	out.imbue(old);

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:07:16
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:07:16
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:07:16
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:10:38
=====================================================

//-----------------------------------------------------------------------------------------
// save.h - 한 학기 강의를 저장하는 코드
// 
// 2023. 9. 7
//-----------------------------------------------------------------------------------------

#pragma once
//#include<iostream>
//#include<string>
//#include<fstream>
//#include<chrono>
//using namespace std;
void save(const std::string&);//const char*는 cpp에서 사용하지x => string을 사용

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:10:38
=====================================================

//----------------------------------------------------------------------------------------------------------------------------------
//save.cpp 한 학기 강의를 저장한다
// 
// 2023. 9. 7
//----------------------------------------------------------------------------------------------------------------------------------

//#include "save.h"
#include<string>
#include<fstream>
#include<chrono>
using namespace std;

//------------------------------------
void save(const std::string& fileName)
//------------------------------------
{
	ifstream in{ fileName};//읽을 파일을 연다. -RAII C++의 자원 관리 기법이 있어서 닫을 필요가 없다.
	ofstream out{ "2023-2 cpp.txt" ,ios::app };//두 번째 인자에 1을 넣어도 되지만 의미를 알 수 없는 숫자를 쓰는 것은 지양해야 한다.

	auto now = chrono::system_clock::now();//epock 1초에 숫자가 하나씩 늘어난다. 숫자를 리턴 받을 수 있다. //현재 time_point를 얻는다.
	auto utc = chrono::system_clock::to_time_t(now);//UTC시간으로 변경

	//localtime은 인자로 메모리 블럭을 받는데 시작 번지만 받아온다. 해킹의 온상이 되는 코드 -sdl 검사 아니요
	auto lt = localtime(&utc);//지역 달력시간으로 변경

	auto old = out.imbue(locale("ko_KR"));//로켈이라고 읽는데 출력스트림을 대한민국으로

	out << '\n' << '\n';
	out << "=====================================================" << '\n';
	out << "저장한 시간 : " << put_time(lt, "%x %A %X") << endl;
	out << "=====================================================" << '\n';
	out << '\n';
	out.imbue(old);

	char c;

	in >> noskipws;//white space도 읽어야 - space, enter, tab
	while (in >> c)
		out << c;
}

=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:10:38
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// save 코드를 파일로 분리
// ------------------------------------------------------------------------------
// 과제 - C++ 코딩 컨벤션이란 무엇인가? , 모두의 cpp, cppreference
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"//선언문이 들어가기에 가장 적합

int main()
{
	save("save.h");
	save("save.cpp");
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:15:48
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// C++ 입출력
// ------------------------------------------------------------------------------
// 과제 - C++ 입출력 관련 내용 알아보기
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>//cin, cout, cerr, clog - 자동 생성
#include "save.h"

int main()
{
	std::cerr << "안녕?" << '\n';//error가 난 상황에 스트림이 이 쪽으로 흘러가게끔

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:17:18
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// C++ 입출력
// ------------------------------------------------------------------------------
// 과제 - C++ 입출력 관련 내용 알아보기
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>//cin, cout, cerr, clog - 자동 생성
#include "save.h"

int main()
{
	// <<추출자
	std::cout<< "안녕?" << '\n';//출력 전담 객체

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:19:27
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// C++ 입출력
// ------------------------------------------------------------------------------
// 과제 - C++ 입출력 관련 내용 알아보기
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>//cin, cout, cerr, clog - 자동 생성
#include "save.h"

int main()
{
	//구구단 2단
	std::cout << 2 << " x " << 1 << " = " << 2 * 1 << '\n';
	std::cout << 2 << " x " << 2 << " = " << 2 * 2 << '\n';
	std::cout << 2 << " x " << 3 << " = " << 2 * 3 << '\n';
	std::cout << 2 << " x " << 4 << " = " << 2 * 4 << '\n';
	std::cout << 2 << " x " << 5 << " = " << 2 * 5 << '\n';
	std::cout << 2 << " x " << 6 << " = " << 2 * 6 << '\n';
	std::cout << 2 << " x " << 7 << " = " << 2 * 7 << '\n';
	std::cout << 2 << " x " << 8 << " = " << 2 * 8 << '\n';
	std::cout << 2 << " x " << 9 << " = " << 2 * 9 << '\n';

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-07 목요일 오후 5:20:24
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.07 (1주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// C++ 입출력
// ------------------------------------------------------------------------------
// 과제 - C++ 입출력 관련 내용 알아보기
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>//cin, cout, cerr, clog - 자동 생성
#include "save.h"

int main()
{
	//구구단 2단
	for (int 변수 = 1; 변수 <= 9; ++변수) {
		std::cout << 2 << " x " << 변수 << " = " << 2 * 변수 << '\n';
	}
	
	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 3:49:01
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n;//메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	cout << "n의 크기 - " << sizeof n << endl;
	cout << "n의 주소 - " << addressof(n) << endl;
	cout << "n의 자료형 - " << typeid(n).name() << endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 3:53:21
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n;//메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	cout << "n의 크기 - " << sizeof cout << endl;
	cout << "n의 주소 - " << addressof(cout) << endl;
	cout << "n의 자료형 - " << typeid(cout).name() << endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 3:55:19
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n;//메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	cout << "main의 주소 - " << addressof(main) << endl;
	cout << "main의 자료형 - " << typeid(main).name() << endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 3:57:51
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main(int,char*)//표준
{
	int n;//메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	cout << "main의 주소 - " << addressof(main) << endl;
	cout << "main의 자료형 - " << typeid(main).name() << endl;

	save("소스.cpp");

	return 0;//c++표준에 이 문장을 쓰라는 말이 없다. 쓰지 않는게 좋다.
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 3:58:38
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n;//메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	cout << "main의 주소 - " << addressof(main) << endl;
	cout << "save의 주소 - " << addressof(save) << endl;

	save("소스.cpp");

}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 3:59:20
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n;//메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	cout << "n의 주소 - " << addressof(n) << endl;
	cout << "main의 주소 - " << addressof(main) << endl;
	cout << "save의 주소 - " << addressof(save) << endl;

	save("소스.cpp");

}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:06:29
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n=0B0111111'11111111'111111111'11111111;//메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	//[문제] n이 가질 수 있는 최댓값을 출력하라.
	cout << "n이 가질 수 있는 최대값 : " << n<< endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:06:54
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n=0B0111111'11111111'111111111'11111111;//메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	//[문제] n이 가질 수 있는 최댓값을 출력하라.
	cout << "n이 가질 수 있는 최대값 : " << n<< endl;
	cout << "n이 가질 수 있는 최대값 : " << INT_MAX<< endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:07:35
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n; //메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	//[문제] n이 가질 수 있는 최댓값을 출력하라.
	n = 0B0111111'11111111'111111111'11111111;
	cout << "n이 가질 수 있는 최대값 : " << n<< endl;
	cout << "n이 가질 수 있는 최대값 : " << INT_MAX<< endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:10:31
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n; //메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	//[문제] n이 가질 수 있는 최솟값을 출력하라.
	n = 0B0111111'11111111'111111111'11111111;
	n += 1;
	cout << "n이 가질 수 있는 최솟값 : " << n<< endl;
	cout << "n이 가질 수 있는 최솟값 : " << INT_MIN<< endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:11:38
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n; //메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	//[문제] n이 가질 수 있는 최솟값을 출력하라.
	n = 0x7FFFFFF;
	n += 1;
	cout << "n이 가질 수 있는 최솟값 : " << n<< endl;
	cout << "n이 가질 수 있는 최솟값 : " << INT_MIN<< endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:11:44
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n; //메모리를 sizeof(int)만큼 주세요. 나는 이름 n으로 access

	//[문제] n이 가질 수 있는 최솟값을 출력하라.
	n = 0x7FFFFFFF;
	n += 1;
	cout << "n이 가질 수 있는 최솟값 : " << n<< endl;
	cout << "n이 가질 수 있는 최솟값 : " << INT_MIN<< endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:14:42
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n; 

	//[문제] n이 가질 수 있는 최댓값을 출력하라.
	n = numeric_limits<int>::max();
	cout << n << endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:22:15
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int n = 123;//n을 초기화 - initialization

	n = 123;//assignment - 대입, 배정, 할당

	cout << n << endl;

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:47:56
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int a[10]{1,3,5,7,9,2,4,6,8,10};//초기화는 {}이 기호를 써서 한다.

	//contiguous (memory) 공간의 연속
	//continuous 시간의 연속

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:52:33
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int a[10]{1,3,5,7,9,2,4,6,8,10};//초기화는 {}이 기호를 써서 한다.

	//[문제] a의 모든 값을 출력하라.
	cout << a[0] << '\n';
	cout << a[1] << '\n';
	cout << a[2] << '\n';
	cout << a[3] << '\n';
	cout << a[4] << '\n';
	cout << a[5] << '\n';
	cout << a[6] << '\n';
	cout << a[7] << '\n';
	cout << a[8] << '\n';
	cout << a[9] << '\n';

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:54:34
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int a[10]{1,3,5,7,9,2,4,6,8,10};//초기화는 {}이 기호를 써서 한다.

	//[문제] a의 모든 값을 출력하라.
	for (int i=0; i < 10; ++i)//10개가 끝인지 알 수 없으므로 좋은 코드가 아니다.
		cout << a[i] << '\n';

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:55:14
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int a[10]{1,3,5,7,9,2,4,6,8,10};//초기화는 {}이 기호를 써서 한다.

	//[문제] a의 모든 값을 출력하라.
	for(int i=0;i<sizeof(a)/(sizeof(int));++i)
		cout << a[i] << '\n';

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:55:21
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int a[10]{1,3,5,7,9,2,4,6,8,10};//초기화는 {}이 기호를 써서 한다.

	//[문제] a의 모든 값을 출력하라.
	for(int i=0;i<sizeof(a)/(sizeof(a[0])); ++i)
		cout << a[i] << '\n';

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:55:45
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int a[10]{1,3,5,7,9,2,4,6,8,10};//초기화는 {}이 기호를 써서 한다.

	//[문제] a의 모든 값을 출력하라.
	for (int i = 0; i < sizeof(a) / (sizeof(a[0])); ++i)
		cout << a[i] << " ";

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:56:01
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int a[100]{1,3,5,7,9,2,4,6,8,10};//초기화는 {}이 기호를 써서 한다.

	//[문제] a의 모든 값을 출력하라.
	for (int i = 0; i < sizeof(a) / (sizeof(a[0])); ++i)
		cout << a[i] << " ";

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 4:57:35
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int a[100]{1,3,5,7,9,2,4,6,8,10};//초기화는 {}이 기호를 써서 한다.

	//[문제] a의 모든 값을 출력하라.
	for (int number:a)//:는 in이라는 뜻이고 a에 들어있다는 뜻 //range-based for, range-for
		cout << number << " ";

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 5:00:08
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include "save.h"
using namespace std;

int main()
{
	int a[100]{1,3,5,7,9,2,4,6,8,10};//초기화는 {}이 기호를 써서 한다.

	//[문제] a의 모든 값을 출력하라.

	for (int number:a)//:는 in이라는 뜻이고 a에 들어있다는 뜻 //range-based for, range-for
		cout << number << " ";
	//이 코드가 좋은 이유는 배열의 크기와 같은 소스 코드의 요구 조건의 변경 사항이 있더라도 바꾸지 않아도 되고,
	//유지 보수에 좋다.



	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 5:06:02
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>//랜덤값을 사용하려면...
#include<format>
#include "save.h"
using namespace std;

default_random_engine dre;//랜덤값을 생성하는 엔진
uniform_int_distribution uid(1, 999);//랜덤값의 분포를 조작

int main()
{
	int a[200];

	for (int i = 0; i < 200; ++i)
		a[i] = uid(dre);

	for (int number : a)
		cout << format("{:4d}",number);
	cout << '\n';

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 5:06:23
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// 
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>//랜덤값을 사용하려면...
#include<format>
#include "save.h"
using namespace std;

default_random_engine dre;//랜덤값을 생성하는 엔진
uniform_int_distribution uid(1, 999);//랜덤값의 분포를 조작

int main()
{
	int a[200];

	for (int i = 0; i < 200; ++i)
		a[i] = uid(dre);

	for (int number : a)
		cout << format("{:4d}",number);
	cout << '\n';

	save("소스.cpp");
}



=====================================================
저장한 시간 : 2023-09-14 목요일 오후 5:18:12
=====================================================

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
//2023.2학기 c++ 09.14 (2주 2일)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------
// int n;
// ------------------------------------------------------------------------------
// 과제 - 다른 자료형으로 강의 내용을 반복해본다.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
//앞에서 일어난 사건과 뒤에서 일어난 사건의 연관이 없는 것을 랜덤이라고 부른다.
//뒤에 나오는 사건이 독립적이며 예측이 불가능 하다. 
//rand()함수는 예측이 가능하므로 랜덤이 아니다.
//rand()함수는 16bit로 이루어진 구시대적 유물이다. 해킹 가능성도 높다.
#include<random>//랜덤값을 사용하려면...
#include<format>
#include "save.h"
using namespace std;

default_random_engine dre;//랜덤값을 생성하는 엔진
uniform_int_distribution uid(1, 999);//랜덤값의 분포를 조작

int main()
{
	int a[200];

	for (int i = 0; i < 200; ++i)
		a[i] = uid(dre);

	for (int number : a)
		cout << format("{:4d}",number);
	cout << '\n';
	

	save("소스.cpp");
}

